<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">

<generatorConfiguration>
    <!-- 配置文件路径 -->
    <properties resource="generatorConfig.properties"/>

    <!-- 指定数据连接驱动jar地址 -->
    <!--<classPathEntry location="${classPath}" />-->

    <!-- 一个数据库一个context -->
    <context id="DB2Tables" targetRuntime="MyBatis3">
        <!-- 指定生成的java文件的编码,没有直接生成到项目时中文可能会乱码 -->
        <property name="javaFileEncoding" value="UTF-8"/>
        <!--插件-->
        <plugin type="org.mybatis.generator.plugins.EqualsHashCodePlugin"/>
        <!--<plugin type="com.lhx.common.mybatis.plugin.MutiDatasourcePaginationPlugin"></plugin>-->
        <!-- 这里的type里写的是你的实现类的类全路径 -->
        <commentGenerator type="com.lhx.common.mybatis.plugin.DBCommentGenerator">
            <property name="suppressDate" value="false"/> <!-- 是否去除注释时间戳 false时打开时间标志，true时关闭-->
            <property name="suppressAllComments" value="false"/>   <!-- 是否去除自动生成的注释 true：是 ： false:否 -->
            <property name="javaFileEncoding" value="UTF-8"/>
        </commentGenerator>
        <!--数据库连接的信息：驱动类、连接地址、用户名、密码 -->
        <jdbcConnection driverClass="${jdbc.driver}"
                        connectionURL="${jdbc.url}"
                        userId="${jdbc.username}"
                        password="${jdbc.password}">
        </jdbcConnection>
        <!--类型转换-->
        <javaTypeResolver>
            <!-- 默认false，把JDBC DECIMAL 和 NUMERIC 类型解析为 Integer，为 true时把JDBC DECIMAL 和
             NUMERIC 类型解析为java.math.BigDecimal -->
            <property name="forceBigDecimals" value="false"/>
        </javaTypeResolver>
        <!-- 生成实体类地址 -->
        <javaModelGenerator targetPackage="${model.package}" targetProject="${target.project}">
            <!-- 是否在当前路径下新加一层schema,eg：flase路径com.oop.eksp.user.model， true:com.oop.eksp.user.model.[schemaName] -->
            <property name="enableSubPackages" value="false"/>
            <!-- 从数据库返回的值被清理前后的空格 -->
            <property name="trimStrings" value="true"/>
            <!--<property name="javaExampleTargetPackage" value="${model.package}"/>  -->
            <!--<property name="javaExampleTargetProject" value="${target.project}"/>  -->
        </javaModelGenerator>
        <!-- 生成mapper.xml映射文件生成的位置 -->
        <sqlMapGenerator targetPackage="${xml.package}" targetProject="${xml.target.project}">
            <!-- 是否在当前路径下新加一层schema,eg：flase路径com.oop.eksp.user.model， true:com.oop.eksp.user.model.[schemaName] -->
            <property name="enableSubPackages" value="false"/>
        </sqlMapGenerator>
        <!-- 生成mapper接口生成的位置 -->
        <javaClientGenerator type="XMLMAPPER" targetPackage="${mapper.package}" targetProject="${target.project}">
            <!-- 是否在当前路径下新加一层schema,eg：flase路径com.oop.eksp.user.model， true:com.oop.eksp.user.model.[schemaName] -->
            <property name="enableSubPackages" value="true"/>
        </javaClientGenerator>

        <table tableName="user_study" domainObjectName="UserStudy"
               enableUpdateByExample="false" enableSelectByExample="false" enableDeleteByExample="false"
               enableCountByExample="false"
        />
        <!--<table tableName="users" domainObjectName="User" enableUpdateByExample="false"-->
        <!--enableSelectByExample="false" enableDeleteByExample="false"-->
        <!--enableCountByExample="false" />-->
        <table tableName="users" domainObjectName="User" enableUpdateByExample="false" enableSelectByExample="false" enableDeleteByExample="false"
               enableCountByExample="false"/>
        <!-- schema即为数据库名 tableName为对应的数据库表 domainObjectName是要生成的实体类 enable*ByExample
            是否生成 example类   -->

        <!-- 忽略列，不生成bean 字段 -->
        <!--<ignoreColumn column="FRED"/>-->
        <!-- 指定列的java数据类型 -->
        <!--<columnOverride column="LONG_VARCHAR_FIELD" jdbcType="VARCHAR"/>-->


    </context>
</generatorConfiguration> 